auto-flush stdout:
'$| = 1;' or '$| ++;'

----------
map ~~<>, 1 .. $N;

If TESTS == 1 then:
faster is:

do{ local $/; <> };

----------
$h{ $u }{ $v } ++;
$h{ $v }{ $u } ++;

faster is:

$h[ $u ]{ $v } ++;
$h[ $v ]{ $u } ++;


----------
push @cand, [ $i, $j ];

is similar by speed to:

push @candi, $i;
push @candj, $j;

----------
adding an attribute to "$h{ $u }{ $v }" type hash:
e.g.:
"$h{ $u }{ 'color' }", then "$h{ $u }{ $v }" ---> "$h{ $u }{ 'points_to' }{ $v }";

----------
# passing direction to sort/reverse

print( sort { 0 } 5, 7, 4, 2, 9, 3, 9, 1  );
# 57429391
print( sort { 1 } 5, 7, 4, 2, 9, 3, 9, 1  );
# 19392475

print( sort { 1 * ( $a <=> $b ) } 5, 7, 4, 2, 9, 3, 9, 1  );
# 12345799
print( sort { -1 * ( $a <=> $b ) } 5, 7, 4, 2, 9, 3, 9, 1  );
# 99754321

----------
glob for small permutations:
perlbrew exec perl -wle 'my $i = 0; @_ = 1 .. 3;  print join " ", glob( "{a,b,c}{a,b,c}{X,Y}" ), "|", glob( join "", ( map "{$_}", join ",", @_ ) x 2 ) '
aaX aaY abX abY acX acY baX baY bbX bbY bcX bcY caX caY cbX cbY ccX ccY | 11 12 13 21 22 23 31 32 33

----------
